listAttributes(mart = ensembl, page = "snp")
as_bio_attr <- listAttributes(mart = ensembl, page = "snp")
write.csv(as_bio_attr, file = "as_bio_attr")
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start"
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"chrom_strand"
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance"
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene"
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene", #怎麼變104個
"phenotype_description"
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene", #怎麼變104個
#"phenotype_description",
"associated_variant_risk_allele",
"p_value",
"set_name"
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
View(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene", #怎麼變104個
#"phenotype_description",
"associated_variant_risk_allele",
"p_value",
#"set_name"#變兩千多個，有很多重複的項
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene", #怎麼變104個
#"phenotype_description",
"associated_variant_risk_allele",
#"p_value",#變兩千多個，有很多重複的項
#"set_name"#變兩千多個，有很多重複的項
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
source("C:/Users/mikali/Desktop/gitfamily/0729.R")
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene", #怎麼變104個
#"phenotype_description",
"associated_variant_risk_allele"
#"p_value",#變兩千多個，有很多重複的項
#"set_name"#變兩千多個，有很多重複的項
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
print(results)
as_attributes <- c(
"refsnp_id",
"refsnp_source",
"chr_name",
"chrom_start",
"chrom_end",
"allele",
"allele_1",
"minor_allele",
"minor_allele_freq",
"clinical_significance", #怎麼變103個
"associated_gene", #怎麼變104個
#"phenotype_description",
"associated_variant_risk_allele",
"p_value"#,變兩千多個，有很多重複的項
#"set_name"#變兩千多個，有很多重複的項
)
results <- getBM(attributes = as_attributes,
filters = 'phenotype_description',
values = 'Ankylosing spondylitis',
mart = ensembl)
library(tidyverse)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
#有問題SNP_ID_CURRENT(type使其跑掉)，OR or BETA(要再確認如何換算)
#去弄個大panda來
bigPanDa_Snps <- read_csv("bigPanDa_Snps.csv")
#有問題SNP_ID_CURRENT(type使其跑掉)，OR or BETA(要再確認如何換算)
#去弄個大panda來
setwd("C:/Users/mikali/Desktop/gitfamily")
bigPanDa_Snps <- read_csv("bigPanDa_Snps.csv")
bigPanDa_Asso <- read_csv("bigPanDa_Asso.csv")
View(bigPanDa_Asso)
View(bigPanDa_Asso)
# 使用 mutate 和 str_split 拆分 riskAlleleName
bigPanDa_Asso <- bigPanDa_Asso %>%
mutate(
split_values = str_split(riskAlleleName, "-", n = 2, simplify = TRUE)
) %>%
mutate(
dbSNPID = split_values[, 1],          # 取左邊的 dbSNPID
riskAllele = split_values[, 2]        # 取右邊的 riskAllele
) %>%
select(-split_values)  # 移除中間的 split_values 列
# 查看結果
print(bigPanDa_Asso)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
# 使用 mutate 和 str_split 拆分 riskAlleleName
bigPanDa_Asso <- bigPanDa_Asso %>%
mutate(
split_values = str_split(riskAlleleName, "-", n = 2, simplify = TRUE)
) %>%
mutate(
dbSNPID = split_values[, 1],          # 取左邊的 dbSNPID
riskAllele = split_values[, 2]        # 取右邊的 riskAllele
) %>%
select(-split_values)  # 移除中間的 split_values 列
# 查看結果
print(df)
# 查看結果
print(bigPanDa_Asso)
library(tidyverse)
getwd()
setwd("C:/Users/mikali/Desktop/gitfamily/網頁資料")
ensembl_export_Ank <- read_csv("ensembl-export_Ank.csv")
gwas_association_downloaded_EFO_0003898 <- read_tsv("gwas-association-downloaded_2024-07-30-EFO_0003898.tsv")
#先來把空的欄位去掉
summary(ensembl_export_Ank)
#name_extra, Submitter, Supporting evidence, evidence_links
ensembl_export_Ank <- ensembl_export_Ank %>%
select(-c('name_extra', 'Submitter', 'Supporting evidence', 'evidence_links'))
summary(gwas_association_downloaded_EFO_0003898)
#沒有
#把一定用不到的去掉
str(ensembl_export_Ank)
#name_link, gene_links, Annotation source...11, study_links
ensembl_export_Ank <- ensembl_export_Ank %>%
select(-c('name_link', 'gene_links', 'Annotation source...11', 'study_links'))
str(gwas_association_downloaded_EFO_0003898)
#DATE ADDED TO CATALOG, PUBMEDID, FIRST AUTHOR, DATE, JOURNAL, LINK, STUDY, MAPPED_TRAIT_URI
gwas_association_downloaded_EFO_0003898 <- gwas_association_downloaded_EFO_0003898 %>%
select(-c('DATE ADDED TO CATALOG', 'PUBMEDID', 'FIRST AUTHOR', 'DATE', 'JOURNAL', 'LINK', 'STUDY', 'MAPPED_TRAIT_URI'))
#有問題SNP_ID_CURRENT(type使其跑掉)，OR or BETA(要再確認如何換算)
#去弄個大panda來
setwd("C:/Users/mikali/Desktop/gitfamily")
bigPanDa_Asso <- read_csv("bigPanDa_Asso.csv")
bigPanDa_Snps <- read_csv("bigPanDa_Snps.csv")
# 使用 mutate 和 str_split 拆分 riskAlleleName
bigPanDa_Asso <- bigPanDa_Asso %>%
mutate(
split_values = str_split(riskAlleleName, "-", simplify = TRUE)
) %>%
mutate(
dbSNPID = split_values[1],         # 取左邊的 riskAllele
riskAllele = split_values[2]            # 取右邊的 dbSNPID
) %>%
select(-split_values)  # 移除中間的 split_values 列
# 查看結果
print(bigPanDa_Asso)
View(bigPanDa_Asso)
View(bigPanDa_Asso)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
View(bigPanDa_Asso)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
# 拆分 riskAlleleName
bigPanDa_Asso <- bigPanDa_Asso %>%
mutate(riskAlleleName = as.character(riskAlleleName)) %>% # 確保是字符型
mutate(split_pos = nchar(riskAlleleName) - 1) %>% # 計算拆分位置
mutate(dbSNPID = substr(riskAlleleName, 1, split_pos), # 提取 dbSNPID
riskAllele = substr(riskAlleleName, split_pos + 2, nchar(riskAlleleName))) %>% # 提取 riskAllele
select(-split_pos) # 刪除輔助變量
# 查看結果
print(bigPanDa_Asso)
View(bigPanDa_Asso)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
View(bigPanDa_Asso)
View(bigPanDa_Snps)
#來看看有哪些用不到的變量
summary(bigPanDa_Asso)
#來看看有哪些用不到的變量
str(bigPanDa_Asso)
#lastMappingDate, lastUpdateDate, riskAlleleName
bigPanDa_Asso <- bigPanDa_Asso %>%
select(-c('lastMappingDate', 'lastUpdateDate', 'riskAlleleName'))
View(bigPanDa_Snps)
str(bigPanDa_Snps)
#lastUpdateDate, locations, region, genomicContexts
bigPanDa_Asso <- bigPanDa_Asso %>%
select(-c('lastUpdateDate', 'locations', 'region', 'genomicContexts'))
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
View(bigPanDa_Snps)
View(bigPanDa_Asso)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
View(bigPanDa_Asso)
View(bigPanDa_Asso)
#來看看有哪些用不到的變量
str(bigPanDa_Asso)
View(bigPanDa_Asso)
bigPanDa_Asso <- read_csv("bigPanDa_Asso.csv")
library(tidyverse)
getwd()
setwd("C:/Users/mikali/Desktop/gitfamily/網頁資料")
ensembl_export_Ank <- read_csv("ensembl-export_Ank.csv")
gwas_association_downloaded_EFO_0003898 <- read_tsv("gwas-association-downloaded_2024-07-30-EFO_0003898.tsv")
#先來把空的欄位去掉
summary(ensembl_export_Ank)
#name_extra, Submitter, Supporting evidence, evidence_links
ensembl_export_Ank <- ensembl_export_Ank %>%
select(-c('name_extra', 'Submitter', 'Supporting evidence', 'evidence_links'))
summary(gwas_association_downloaded_EFO_0003898)
#沒有
#把一定用不到的去掉
str(ensembl_export_Ank)
#name_link, gene_links, Annotation source...11, study_links
ensembl_export_Ank <- ensembl_export_Ank %>%
select(-c('name_link', 'gene_links', 'Annotation source...11', 'study_links'))
str(gwas_association_downloaded_EFO_0003898)
#DATE ADDED TO CATALOG, PUBMEDID, FIRST AUTHOR, DATE, JOURNAL, LINK, STUDY, MAPPED_TRAIT_URI
gwas_association_downloaded_EFO_0003898 <- gwas_association_downloaded_EFO_0003898 %>%
select(-c('DATE ADDED TO CATALOG', 'PUBMEDID', 'FIRST AUTHOR', 'DATE', 'JOURNAL', 'LINK', 'STUDY', 'MAPPED_TRAIT_URI'))
#有問題SNP_ID_CURRENT(type使其跑掉)，OR or BETA(要再確認如何換算)
#去弄個大panda來
setwd("C:/Users/mikali/Desktop/gitfamily")
bigPanDa_Asso <- read_csv("bigPanDa_Asso.csv")
bigPanDa_Snps <- read_csv("bigPanDa_Snps.csv")
View(bigPanDa_Asso)
set_names()
#有一些變數名稱怪怪的，先看有沒有全空的值，再決定要不要刪
summary(bigPanDa_Asso)
#description...10, haplotypeSnpCount
bigPanDa_Asso <- bigPanDa_Asso %>%
select(-c('description...10', 'haplotypeSnpCount'))
summary(bigPanDa_Snps)
#沒有
bigPanDa_Snps %>%
duplicated(rsId)
#沒有
bigPanDa_Snps %>%
duplicated("rsId")
#沒有
duplicates <- bigPanDa_Snps[duplicated(bigPanDa_Snps[rsId]), ]
#沒有
duplicates <- bigPanDa_Snps[duplicated(bigPanDa_Snps["rsId"]), ]
duplicates
duplicates <- duplicates %>%
arrange(rsId)
# 查看排序後的數據框
print(duplicates)
# 提取所有重複項
duplicates <- bigPanDa_Asso %>%
group_by("rsId") %>%
filter(n() > 1) %>%
ungroup()
# 查看重複項
print(duplicates)
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
# 提取所有重複項
duplicates <- bigPanDa_Asso %>%
group_by("rsId") %>%
filter(n() > 1) %>%
ungroup() %>%
select("rsId")
View(bigPanDa_Asso)
# 提取所有重複項
duplicates <- bigPanDa_Asso %>%
group_by("dbSNPID") %>%
filter(n() > 1) %>%
ungroup() %>%
select("dbSNPID")
# 查看重複項
print(duplicates)
# 提取所有重複項
duplicates <- bigPanDa_Asso %>%
group_by("dbSNPID") %>%
filter(n() > 1) %>%
ungroup() %>%
arrange("dbSNPID")
# 查看重複項
print(duplicates)
# 提取所有重複項
duplicates <- bigPanDa_Asso %>%
group_by("dbSNPID") %>%
filter(n() > 1) %>%
ungroup() %>%
arrange("dbSNPID") %>%
select("dbSNPID")
# 查看重複項
print(duplicates)
#是不是有哪些觀測值完全重複?
# 提取所有完全重複的觀測值
duplicates <- bigPanDa_Asso %>%
group_by(across(everything())) %>%  # 根據所有變量分組
filter(n() > 1) %>%                  # 選擇出現次數大於1的行
ungroup()
# 查看重複的觀測值
print(duplicates)
duplicates <- bigPanDa_Snps %>%
group_by(across(everything())) %>%  # 根據所有變量分組
filter(n() > 1) %>%                  # 選擇出現次數大於1的行
ungroup()
# 查看重複的觀測值
print(duplicates)
View(duplicates)
View(bigPanDa_Asso)
sorted_col1 <- bigPanDa_Asso %>%
select(dbSNPID) %>%
arrange(dbSNPID)
sorted_col1
sorted_col2 <- bigPanDa_Snps %>%
select(rsId) %>%
arrange(rsId)
sorted_col2
# 比對兩個數據框
comparison <- cbind(sorted_col1, col2)
# 比對兩個數據框
comparison <- cbind(sorted_col1, sorted_col2)
comparison
comparison %>%
filter(sorted_col1!=sorted_col2)
# 找出不相等的觀測值
not_equal <- data.frame(
sorted_col1 = sorted_col1,
sorted_col2 = sorted_col2
) %>%
filter(sorted_col1 != sorted_col2)
# 查看不相等的觀測值
print(not_equal)
# 找出不相等的觀測值
not_equal <- data.frame(
sorted_col1 = sorted_col1,
sorted_col2 = sorted_col2
) %>%
filter(sorted_col1 == sorted_col2)
# 查看不相等的觀測值
print(not_equal)
View(bigPanDa_Asso)
View(bigPanDa_Snps)
View(bigPanDa_Asso)
# 找出 rsID 重複的觀測值
duplicates <- bigPanDa_Asso %>%
group_by(rsID) %>%
filter(n() > 1) %>%
ungroup()
# 找出 rsID 重複的觀測值
duplicates <- bigPanDa_Asso %>%
group_by(dbSNPID) %>%
filter(n() > 1) %>%
ungroup()
# 查看重複的觀測值
print(duplicates)
View(duplicates)
# 找出 dbSNPID 重複的觀測值
duplicates <- bigPanDa_Asso %>%
group_by(dbSNPID) %>%
filter(n() > 1) %>%
select(dbSNPID)
# 找出不重複的觀測值
unique_rows <- bigPanDa_Asso %>%
anti_join(duplicates, by = "dbSNPID") %>%
select(dbSNPID, everything())
# 查看結果
print(unique_rows)
View(unique_rows)
View(duplicates)
View(bigPanDa_Asso)
duplicates <- bigPanDa_Snps %>%
group_by(across(everything())) %>%  # 根據所有變量分組
filter(n() > 1) %>%                  # 選擇出現次數大於1的行
ungroup()
# 查看重複的觀測值
print(duplicates)
View(bigPanDa_Asso)
View(ensembl_export_Ank)
library(tidyverse)
getwd()
setwd("C:/Users/mikali/Desktop/gitfamily/網頁資料")
ensembl_export_Ank <- read_csv("ensembl-export_Ank.csv")
gwas_association_downloaded_EFO_0003898 <- read_tsv("gwas-association-downloaded_2024-07-30-EFO_0003898.tsv")
#先來把空的欄位去掉
summary(ensembl_export_Ank)
#name_extra, Submitter, Supporting evidence, evidence_links
ensembl_export_Ank <- ensembl_export_Ank %>%
select(-c('name_extra', 'Submitter', 'Supporting evidence', 'evidence_links'))
summary(gwas_association_downloaded_EFO_0003898)
#把一定用不到的去掉
str(ensembl_export_Ank)
#name_link, gene_links, Annotation source...11, study_links
ensembl_export_Ank <- ensembl_export_Ank %>%
select(-c('name_link', 'gene_links', 'Annotation source...11', 'study_links'))
str(gwas_association_downloaded_EFO_0003898)
#DATE ADDED TO CATALOG, PUBMEDID, FIRST AUTHOR, DATE, JOURNAL, LINK, STUDY, MAPPED_TRAIT_URI
gwas_association_downloaded_EFO_0003898 <- gwas_association_downloaded_EFO_0003898 %>%
select(-c('DATE ADDED TO CATALOG', 'FIRST AUTHOR', 'DATE', 'JOURNAL', 'LINK', 'MAPPED_TRAIT_URI'))
source("C:/Users/mikali/Desktop/gitfamily/網頁資料/0730.R")
#沒有
duplicates <- bigPanDa_Asso %>%
group_by(across(associationId)) %>%  # 根據所有變量分組
filter(n() > 1) %>%                  # 選擇出現次數大於1的行
ungroup()
duplicates
View(duplicates)
